% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/makeSummarizedExperimentFromGDS.R
\name{makeSummarizedExperimentFromGDS}
\alias{makeSummarizedExperimentFromGDS}
\title{makeSummarizedExperimentFromGDS}
\usage{
makeSummarizedExperimentFromGDS(file, name = NA,
  rowDataColumns = character(), colDataColumns = character(),
  infoColumns = character(), fmt = character(), rowDataOnDisk = TRUE,
  colDataOnDisk = TRUE, fmtDataOnDisk = TRUE)
}
\arguments{
\item{file}{the path to the gds.class file.}

\item{name}{the components of the gds file that will be represented
as \code{GDSArray} file.}

\item{rowDataColumns}{which columns of \code{rowData} to
import. The default is ALL.}

\item{colDataColumns}{which columns of \code{colData} to
import. The default is ALL.}

\item{infoColumns}{which columns of \code{infoColumns} to import. The default is
ALL.}

\item{fmt}{which data of \code{fmt} to import. The default is ALL.}

\item{rowDataOnDisk}{whether to save the \code{rowData} as
DelayedArray object. The default is TRUE.}

\item{colDataOnDisk}{whether to save the \code{colData} as
DelayedArray object. The default is TRUE.}

\item{fmtDataOnDisk}{whether to save the \code{fmtData} as
DelayedArray object. The default is TRUE.}
}
\description{
Conversion of gds file into SummarizedExperiment.
}
\examples{
\dontrun{
file <- system.file(package="SNPRelate", "extdata", "hapmap_geno.gds")
se <- makeSummarizedExperimentFromGDS(file)
rowData(se)
SummarizedExperiment::colData(se)
metadata(se)
showAvailable(file)
se1 <- makeSummarizedExperimentFromGDS(file, rowDataColumns=c("ALLELE"))
SummarizedExperiment::rowRanges(se1)
file <- SeqArray::seqExampleFileName(type="gds")
se <- makeSummarizedExperimentFromGDS(file)
showAvailable(file)
rowdatacols <- showAvailable(file, "rowDataColumns")$rowDataColumns
coldatacols <- showAvailable(file, "colDataColumns")$colDataColumns
infocols <- showAvailable(file, "infoColumns")$infoColumns
fmt <- showAvailable(file, "fmt")$fmt
se1 <- makeSummarizedExperimentFromGDS(
file,
rowDataColumns=rowdatacols[1:3],
colDataColumns = coldatacols[1],
infoColumns = infocols[c(3,5,7)],
fmt = fmt
)
metadata(se1)
SummarizedExperiment::rowRanges(se1)
}
}
